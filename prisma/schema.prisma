// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Operator {
  id       Int                 @id @default(autoincrement())
  fName    String
  lName    String
  email    String              @unique
  password String
  stores   OperatorsOnStores[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Store {
  id        Int                 @id @default(autoincrement())
  products  Product[]
  media     MediaLibrary[]
  operators OperatorsOnStores[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  quantity    Int
  price       Float
  images      String[]
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([title, storeId])
}

model MediaLibrary {
  id      Int      @id @default(autoincrement())
  urls    String[]
  title   String
  alt     String   @default("")
  tag     String[]
  store   Store    @relation(fields: [storeId], references: [id])
  storeId Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model OperatorsOnStores {
  store      Store    @relation(fields: [storeId], references: [id])
  storeId    Int // relation scalar field (used in the `@relation` attribute above)
  operator   Operator @relation(fields: [operatorId], references: [id])
  operatorId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([storeId, operatorId])
}

model RefreshToken {
  id        Int     @id @default(autoincrement())
  sub       Int
  username  String
  ip        String
  userAgent String
  valid     Boolean @default(true)

  @@map("refreshTokens")
}
